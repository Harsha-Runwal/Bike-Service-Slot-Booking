
-- CREATING SCHEMA ----------------------------

DROP SCHEMA IF EXISTS BIKE_SERVICE_SLOT_BOOKING;
CREATE SCHEMA  BIKE_SERVICE_SLOT_BOOKING;
USE  BIKE_SERVICE_SLOT_BOOKING;

-- ---------------------------------------------------------------------------------

--  ------------------------------CUSTOMER DETAILS TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.CUSTOMER_TABLE(CUSTOMER_ID INT PRIMARY KEY AUTO_INCREMENT,FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,MOBILE_NO VARCHAR(10) NOT NULL, EMAIL VARCHAR(25) NOT NULL,PASSWORD VARCHAR(20) NOT NULL);

--  ------------------------------SERVICE CENTER TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.SERVICE_CENTER_TBL(SERVICE_CENTER_ID INT PRIMARY KEY AUTO_INCREMENT,NAME VARCHAR(50) NOT NULL,
CONTACT_NO VARCHAR(10) NOT NULL,CITY VARCHAR(255) NOT NULL,ADDRESS VARCHAR(255),EMAIL VARCHAR(200) NOT NULL,PASSWORD VARCHAR(20) NOT NULL,PINCODE INT NOT null, REG_NO int not null, CAPACITY INT NOT null);

--  ------------------------------OPERATIONS TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.OPERATIONS_TABLE(OPERATIONS_ID INT PRIMARY KEY AUTO_INCREMENT ,NAME VARCHAR(250) NOT NULL,
COST decimal(8,2));

--  ------------------------------PLAN TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.PLAN_TABLE(PLAN_ID INT PRIMARY KEY,NAME VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL,IMAGE LONGBLOB NOT NULL, COST FLOAT, SERVICE_CENTER_ID INT,
CONSTRAINT FK_SERVICE_CENTER_ID FOREIGN KEY(SERVICE_CENTER_ID) REFERENCES SERVICE_CENTER_TBL(SERVICE_CENTER_ID) );

--  ------------------------------PLAN_OPERATIONS MAPPING TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.SERVICE_CENTER_OPERATION_MAP_TBL(SERVICE_CENTER_ID INT ,OPERATIONS_ID INT,  
CONSTRAINT FK_OPERTAIONS FOREIGN KEY(OPERATIONS_ID) REFERENCES OPERATIONS_TABLE(OPERATIONS_ID),
CONSTRAINT FK_PLAN FOREIGN KEY(SERVICE_CENTER_ID) REFERENCES SERVICE_CENTER_TBL(SERVICE_CENTER_ID));

--  ------------------------------SERVICE SLOT INFO TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.SERVICE_SLOT_INFO_TBL(SLOT_ID INT PRIMARY KEY,SERVICE_CENTER_ID INT,DATE varchar(20), TOTAL_SLOT INT NOT null,REMAINING_SLOT INT,
CONSTRAINT FK_SLOT FOREIGN KEY(SERVICE_CENTER_ID) REFERENCES SERVICE_CENTER_TBL(SERVICE_CENTER_ID));
-- REMAINING SLOTS COLUMN WILL BE UPDATED FROM QUERY 

--  ------------------------------BOOKING_TABLE TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS  BIKE_SERVICE_SLOT_BOOKING.BOOKING_TABLE(BOOKING_ID INT PRIMARY KEY AUTO_INCREMENT, VECHILE_REG_NO VARCHAR(10) NOT NULL,
MODEL_NO VARCHAR(100), SLOT_ID INT,USER_ID INT, STATUS bool, TOTAL_COST INT,
CONSTRAINT FK_SLOTID FOREIGN KEY(SLOT_ID) REFERENCES SERVICE_SLOT_INFO_TBL(SLOT_ID),
CONSTRAINT FK_PLANID FOREIGN KEY(USER_ID) REFERENCES CUSTOMER_TABLE(CUSTOMER_ID)
);
-- SLOT ID USER ID CONSTRAINT REMAINING

--  ------------------------------BOOKING_OPERATION_DETAILS TABLE---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.BOOKING_OPERATION_DETAILS(ID INT, BOOKING_ID INT, OPERATIONS_ID INT, COST INT, STATUS bool,
CONSTRAINT FK_BOOKINGID FOREIGN KEY(BOOKING_ID) REFERENCES BOOKING_TABLE(BOOKING_ID),
CONSTRAINT FK_OPERATION FOREIGN KEY(OPERATIONS_ID) REFERENCES OPERATIONS_TABLE(OPERATIONS_ID));

--   ------------------------------------------Review TABLE------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS  BIKE_SERVICE_SLOT_BOOKING.REVIEW(ID INT PRIMARY KEY, RATINGS INT , COMMENT VARCHAR(255),
BOOKING_ID INT , CONSTRAINT FK_REVIEW FOREIGN KEY(BOOKING_ID) REFERENCES BOOKING_TABLE(BOOKING_ID));

--  ----------------------------------------------ADMIN TABLE--------------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS BIKE_SERVICE_SLOT_BOOKING.ADMIN(ID INT PRIMARY KEY,EMAIL VARCHAR(50), PASSWORD VARCHAR(20));









